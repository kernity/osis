# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-11-08 11:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import localflavor.generic.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('osis_common', '0010_documentfile_username'),
        ('reference', '0010_delete_assimilationcriteria'),
        ('base', '0076_auto_20161104_1504'),
        ('admission', '0002_auto_20160830_1039'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionExamType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('name', models.CharField(max_length=100)),
                ('adhoc', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('activation_code', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('birth_place', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('FEMALE', 'female'), ('MALE', 'male')], max_length=20, null=True)),
                ('civil_status', models.CharField(blank=True, choices=[('MARRIED', 'married'), ('SINGLE', 'single'), ('WIDOWED', 'widowed'), ('DIVORCED', 'divorced'), ('SEPARATED', 'separated'), ('COHABITANT', 'cohabitant'), ('UNKNOWN', 'unknown')], default='UNKNOWN', max_length=20, null=True)),
                ('number_children', models.IntegerField(blank=True, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=50, null=True)),
                ('national_id', models.CharField(blank=True, max_length=25, null=True)),
                ('id_card_number', models.CharField(blank=True, max_length=25, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=25, null=True)),
                ('phone_mobile', models.CharField(blank=True, max_length=30, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('additional_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('registration_id', models.CharField(blank=True, max_length=20, null=True)),
                ('last_academic_year', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(choices=[('fr-be', 'French'), ('en', 'English')], default='fr-be', max_length=30, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicantDocumentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('application_type', models.CharField(choices=[('ADMISSION', 'ADMISSION'), ('INSCRIPTION', 'INSCRIPTION')], max_length=20)),
                ('national_degree', models.NullBooleanField(default=None)),
                ('valuation_possible', models.NullBooleanField(default=None)),
                ('started_similar_studies', models.NullBooleanField(default=None)),
                ('credits_to_value', models.NullBooleanField(default=None)),
                ('applied_to_sameprogram', models.NullBooleanField(default=None)),
                ('resident', models.NullBooleanField(default=None)),
                ('raffle_number', models.CharField(blank=True, max_length=50, null=True)),
                ('study_grant', models.BooleanField(default=False)),
                ('study_grant_number', models.CharField(blank=True, max_length=50, null=True)),
                ('deduction_children', models.BooleanField(default=False)),
                ('scholarship', models.BooleanField(default=False)),
                ('scholarship_organization', models.TextField(blank=True, null=True)),
                ('sport_membership', models.BooleanField(default=False)),
                ('culture_membership', models.BooleanField(default=False)),
                ('solidarity_membership', models.BooleanField(default=False)),
                ('bank_account_iban', localflavor.generic.models.IBANField(False, ('AT', 'BE', 'BG', 'CH', 'CY', 'CZ', 'DE', 'DK', 'EE', 'ES', 'FI', 'FR', 'GB', 'GI', 'GR', 'HR', 'HU', 'IE', 'IS', 'IT', 'LI', 'LT', 'LU', 'LV', 'MC', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SE', 'SI', 'SK', 'SM'), blank=True, null=True)),
                ('bank_account_bic', localflavor.generic.models.BICField(blank=True, null=True)),
                ('bank_account_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationAssimilationCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('criteria', models.CharField(choices=[('CRITERIA_1', 'CRITERIA_1'), ('CRITERIA_2', 'CRITERIA_2'), ('CRITERIA_3', 'CRITERIA_3'), ('CRITERIA_4', 'CRITERIA_4'), ('CRITERIA_5', 'CRITERIA_5'), ('CRITERIA_6', 'CRITERIA_6'), ('CRITERIA_7', 'CRITERIA_7')], max_length=50)),
                ('additional_criteria', models.CharField(blank=True, choices=[('CRITERIA_1', 'CRITERIA_1'), ('CRITERIA_2', 'CRITERIA_2'), ('CRITERIA_3', 'CRITERIA_3'), ('CRITERIA_4', 'CRITERIA_4'), ('CRITERIA_5', 'CRITERIA_5'), ('CRITERIA_6', 'CRITERIA_6'), ('CRITERIA_7', 'CRITERIA_7')], max_length=50, null=True)),
                ('selected', models.NullBooleanField()),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationDocumentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Application')),
                ('document_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osis_common.DocumentFile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('academic_year', models.IntegerField(blank=True, null=True)),
                ('path_type', models.CharField(blank=True, choices=[('LOCAL_UNIVERSITY', 'national_university'), ('FOREIGN_UNIVERSITY', 'foreign_university'), ('LOCAL_HIGH_EDUCATION', 'high_national_non_university'), ('FOREIGN_HIGH_EDUCATION', 'high_foreign_non_university'), ('ANOTHER_ACTIVITY', 'other')], max_length=25, null=True)),
                ('national_education', models.CharField(blank=True, choices=[('FRENCH', 'FRENCH'), ('GERMAN', 'GERMAN'), ('DUTCH', 'DUTCH')], max_length=20, null=True)),
                ('grade_type_no_university', models.CharField(blank=True, choices=[('HIGHER_NON_UNIVERSITY', 'higher_non_university'), ('BACHELOR', 'bachelor'), ('MASTER', 'master'), ('OTHER', 'other')], max_length=25, null=True)),
                ('result', models.CharField(blank=True, choices=[('SUCCEED', 'succeeded'), ('FAILED', 'failed'), ('NO_RESULT', 'no_result')], max_length=20, null=True)),
                ('credits_enrolled', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('credits_obtained', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('diploma', models.BooleanField(default=False)),
                ('diploma_title', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_type', models.CharField(blank=True, choices=[('JOB', 'job'), ('INTERNSHIP', 'internship'), ('VOLUNTEERING', 'volunteering'), ('UNEMPLOYMENT', 'unemployment'), ('ILLNESS', 'illness'), ('OTHER', 'other')], max_length=255, null=True)),
                ('activity', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_place', models.CharField(blank=True, max_length=255, null=True)),
                ('study_system', models.CharField(blank=True, choices=[('SOCIAL_ADVANCEMENT', 'social_advancement'), ('FULL_EXERCISE', 'full_exercise')], max_length=25, null=True)),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Curriculum_domain', to='reference.Domain')),
                ('grade_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.GradeType')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Language')),
                ('national_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.EducationInstitution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('type', models.CharField(choices=[('LEGAL', 'Legal'), ('CONTACT', 'Contact')], max_length=20)),
                ('street', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=6)),
                ('complement', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=255)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_address_country', to='reference.Country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('name', models.CharField(max_length=255)),
                ('adhoc', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecondaryEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('diploma', models.BooleanField(default=False)),
                ('academic_year', models.IntegerField(blank=True, null=True)),
                ('national', models.NullBooleanField(default=True)),
                ('national_community', models.CharField(blank=True, choices=[('FRENCH', 'FRENCH'), ('GERMAN', 'GERMAN'), ('DUTCH', 'DUTCH')], max_length=20, null=True)),
                ('dipl_acc_high_educ', models.NullBooleanField(default=False)),
                ('path_repetition', models.NullBooleanField(default=False)),
                ('path_reorientation', models.NullBooleanField(default=False)),
                ('result', models.CharField(blank=True, choices=[('LOW', 'low_result'), ('MIDDLE', 'middle_result'), ('HIGH', 'high_result')], max_length=20, null=True)),
                ('international_diploma', models.CharField(blank=True, choices=[('NATIONAL', 'baccalaureat_national'), ('EUROPEAN', 'baccalaureat_european'), ('INTERNATIONAL', 'baccalaureat_international')], max_length=20, null=True)),
                ('international_equivalence', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No'), ('DEMANDED', 'Demanded')], max_length=20, null=True)),
                ('education_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.EducationType')),
                ('international_diploma_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Country')),
                ('international_diploma_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Language')),
                ('national_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.EducationInstitution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecondaryEducationExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('type', models.CharField(choices=[('ADMISSION', 'admission'), ('LANGUAGE', 'language'), ('PROFESSIONAL', 'professional')], max_length=20)),
                ('exam_date', models.DateField(blank=True, null=True)),
                ('institution', models.CharField(blank=True, max_length=100, null=True)),
                ('result', models.CharField(blank=True, choices=[('LOW', 'Moins de 65%'), ('MIDDLE', 'entre 65% et 75%'), ('HIGH', 'plus de 75%'), ('SUCCEED', 'succeeded'), ('FAILED', 'failed'), ('ENROLLMENT_IN_PROGRESS', 'demanded_result')], max_length=30, null=True)),
                ('admission_exam_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.AdmissionExamType')),
                ('secondary_education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.SecondaryEducation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='option',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4,  null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, null=True),
        ),
        migrations.CreateModel(
            name='SociologicalSurvey',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, null=True)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='admission.Applicant')),
                ('number_brothers_sisters', models.IntegerField(default=0)),
                ('father_is_deceased', models.BooleanField(default=False)),
                ('father_education', models.CharField(blank=True, choices=[('UNKNOWN', 'UNKNOWN'), ('PRIMARY', 'PRIMARY'), ('SECONDARY_INFERIOR', 'SECONDARY_INFERIOR'), ('SECONDARY_SUPERIOR', 'SECONDARY_SUPERIOR'), ('SUPERIOR_NON_UNIVERSITY', 'SECONDARY_SUPERIOR'), ('UNIVERSITY', 'UNIVERSITY')], max_length=40, null=True)),
                ('mother_is_deceased', models.BooleanField(default=False)),
                ('mother_education', models.CharField(blank=True, choices=[('UNKNOWN', 'UNKNOWN'), ('PRIMARY', 'PRIMARY'), ('SECONDARY_INFERIOR', 'SECONDARY_INFERIOR'), ('SECONDARY_SUPERIOR', 'SECONDARY_SUPERIOR'), ('SUPERIOR_NON_UNIVERSITY', 'SECONDARY_SUPERIOR'), ('UNIVERSITY', 'UNIVERSITY')], max_length=40, null=True)),
                ('student_professional_activity', models.CharField(blank=True, choices=[('NO_PROFESSION', 'NO_PROFESSION'), ('PART_TIME', 'PART_TIME'), ('FULL_TIME', 'FULL_TIME')], max_length=40, null=True)),
                ('conjoint_professional_activity', models.CharField(blank=True, choices=[('NO_PROFESSION', 'NO_PROFESSION'), ('PART_TIME', 'PART_TIME'), ('FULL_TIME', 'FULL_TIME')], max_length=40, null=True)),
                ('conjoint_profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conjoint_profession', to='admission.Profession')),
                ('father_profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='father_profession', to='admission.Profession')),
                ('maternal_grandfather_profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maternal_grandfather_profession', to='admission.Profession')),
                ('mother_profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mother_profession', to='admission.Profession')),
                ('paternal_grandfather_profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paternal_grandfather_profession', to='admission.Profession')),
                ('student_profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profession', to='admission.Profession')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='secondaryeducation',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.Applicant'),
        ),
        migrations.AddField(
            model_name='personaddress',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Applicant'),
        ),
        migrations.AddField(
            model_name='curriculum',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Applicant'),
        ),
        migrations.AddField(
            model_name='curriculum',
            name='sub_domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Curriculum_sub_domain', to='reference.Domain'),
        ),
        migrations.AddField(
            model_name='application',
            name='applicant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Applicant'),
        ),
        migrations.AddField(
            model_name='application',
            name='offer_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OfferYear'),
        ),
        migrations.AddField(
            model_name='applicantdocumentfile',
            name='applicant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Applicant'),
        ),
        migrations.AddField(
            model_name='applicantdocumentfile',
            name='document_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osis_common.DocumentFile'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='birth_country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Country'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='nationality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_nationality', to='reference.Country'),
        ),
        migrations.AddField(
            model_name='answer',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Application'),
        ),
        migrations.AddField(
            model_name='answer',
            name='option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.Option'),
        ),
        migrations.AlterUniqueTogether(
            name='applicantdocumentfile',
            unique_together=set([('applicant', 'document_file')]),
        ),
        migrations.AddField(
            model_name='form',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
    ]
